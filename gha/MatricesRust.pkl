// ==-----------------------------------------------------------== //
// SPDX-FileCopyrightText: Â© 2025 Nayan Patil <nayantsg@proton.me>
//
// SPDX-License-Identifier: Apache-2.0
// ==-----------------------------------------------------------== //

@ModuleInfo { minPklVersion = "0.27.0" }
module MatricesRust

import "../schemas/GitHubAction.pkl" as gha

const function rustMatrixBuild() = new Listing {
  ...rustMatrixBase()
  ...rustMatrixBuildTestsExtras()
  ...rustMatrixNotForTests()
}

const function rustMatrixClippyFull() = new Listing {
  ...rustMatrixBase()
  ...rustMatrixExtraNightlyBeta()
  ...rustMatrixBuildTestsExtras()
  ...rustMatrixNotForTests()
}

const function rustMatrixClippyMinimal() = new Listing {
  ...rustMatrixBase()
  ...rustMatrixExtraNightlyBeta()
}

const function rustMatrixTestFull() = new Listing {
  ...rustMatrixBase()
  ...rustMatrixExtraNightlyBeta()
  ...rustMatrixBuildTestsExtras()
}

const function rustMatrixTestMinimal() = new Listing {
  ...rustMatrixBase()
  ...rustMatrixExtraNightlyBeta()
}

// Runners
const x86_64_LinuxRunner = "ubuntu-24.04"
const aarch64_LinuxRunner = "ubuntu-24.04-arm"
const x86_64_MacOSRunner = "macos-13"
const aarch64_MacOSRunner = "macos-15"
const x86_64_WindowsRunner = "windows-2025"

// Toolchains
const rustStable_x86_64_LinuxGNU = "stable-x86_64-unknown-linux-gnu"
const rustStable_x86_64_WindowsMSVC = "stable-x86_64-pc-windows-msvc"
const rustStable_x86_64_WindowsGNU = "stable-x86_64-pc-windows-gnu"

const function rustMatrixBase() = new Listing {
  new {
    name = "x86_64-linux-gnu-stable"
    os = x86_64_LinuxRunner
    toolchain = "stable-\(this.target)"
    target = "x86_64-unknown-linux-gnu"
    buildtool = "cargo"
  }
  new {
    name = "aarch64-linux-gnu-stable"
    os = aarch64_LinuxRunner
    toolchain = "stable-\(this.target)"
    target = "aarch64-unknown-linux-gnu"
    buildtool = "cargo"
  }
  new {
    name = "x86_64-macos-stable"
    os = x86_64_MacOSRunner
    toolchain = "stable-\(this.target)"
    target = "x86_64-apple-darwin"
    buildtool = "cargo"
  }
  new {
    name = "aarch64-macos-stable"
    os = aarch64_MacOSRunner
    toolchain = "stable-\(this.target)"
    target = "aarch64-apple-darwin"
    buildtool = "cargo"
  }
  new {
    name = "x84_64-windows-msvc-stable"
    os = x86_64_WindowsRunner
    toolchain = "stable-\(this.target)"
    target = "x86_64-pc-windows-msvc"
    buildtool = "cargo"
  }
  new {
    name = "x84_64-windows-gnu-stable"
    os = x86_64_WindowsRunner
    toolchain = "stable-\(this.target)"
    target = "x86_64-pc-windows-gnu"
    buildtool = "cargo"
  }
}

const function rustMatrixExtraNightlyBeta() = new {
  new {
    name = "x86_64-linux-gnu-nightly"
    os = x86_64_LinuxRunner
    toolchain = "nightly-\(this.target)"
    target = "x86_64-unknown-linux-gnu"
    buildtool = "cargo"
  }
  new {
    name = "x86_64-linux-gnu-beta"
    os = x86_64_LinuxRunner
    toolchain = "beta-\(this.target)"
    target = "x86_64-unknown-linux-gnu"
    buildtool = "cargo"
  }
  new {
    name = "aarch64-linux-gnu-nightly"
    os = aarch64_LinuxRunner
    toolchain = "nightly-\(this.target)"
    target = "aarch64-unknown-linux-gnu"
    buildtool = "cargo"
  }
  new {
    name = "aarch64-linux-gnu-beta"
    os = aarch64_LinuxRunner
    toolchain = "beta-\(this.target)"
    target = "aarch64-unknown-linux-gnu"
    buildtool = "cargo"
  }
  new {
    name = "aarch64-macos-nightly"
    os = aarch64_MacOSRunner
    toolchain = "nightly-\(this.target)"
    target = "aarch64-apple-darwin"
    buildtool = "cargo"
  }
  new {
    name = "aarch64-macos-beta"
    os = aarch64_MacOSRunner
    toolchain = "beta-\(this.target)"
    target = "aarch64-apple-darwin"
    buildtool = "cargo"
  }
  new {
    name = "x84_64-windows-msvc-nightly"
    os = x86_64_WindowsRunner
    toolchain = "nightly-\(this.target)"
    target = "x86_64-pc-windows-msvc"
    buildtool = "cargo"
  }
  new {
    name = "x84_64-windows-msvc-beta"
    os = x86_64_WindowsRunner
    toolchain = "beta-\(this.target)"
    target = "x86_64-pc-windows-msvc"
    buildtool = "cargo"
  }
}

const function rustMatrixNotForTests() = new Listing {
  new {
    name = "i686-windows-gnu-stable"
    // Use linux runner to install podman with breeze
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "i686-pc-windows-gnu"
    buildtool = "cross"
  }
  new {
    name = "aarch64-linux-android-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "aarch64-linux-android"
    buildtool = "cross"
  }
  new {
    name = "x86_64-linux-android-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "x86_64-linux-android"
    buildtool = "cross"
  }
  new {
    name = "x86_64-freebsd-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "x86_64-unknown-freebsd"
    buildtool = "cross"
  }
  new {
    name = "x86_64-netbsd-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "x86_64-unknown-netbsd"
    buildtool = "cross"
  }
}

const function rustMatrixBuildTestsExtras() = new {
  new {
    name = "x86_64-linux-musl-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "x86_64-unknown-linux-musl"
    buildtool = "cross"
  }
  new {
    name = "i686-linux-gnu-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "i686-unknown-linux-gnu"
    buildtool = "cross"
  }
  new {
    name = "aarch64-linux-musl-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "aarch64-unknown-linux-musl"
    buildtool = "cross"
  }
  new {
    name = "armv7-linux-gnueabi-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "armv7-unknown-linux-gnueabi"
    buildtool = "cross"
  }
  new {
    name = "armv7-linux-musleabi-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "armv7-unknown-linux-musleabi"
    buildtool = "cross"
  }
  new {
    name = "armv7-linux-gnueabihf-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "armv7-unknown-linux-gnueabihf"
    buildtool = "cross"
  }
  new {
    name = "armv7-linux-musleabihf-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "armv7-unknown-linux-musleabihf"
    buildtool = "cross"
  }
  new {
    name = "powerpc-linux-gnu-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "powerpc-unknown-linux-gnu"
    buildtool = "cross"
  }
  new {
    name = "powerpc64-linux-gnu-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "powerpc64-unknown-linux-gnu"
    buildtool = "cross"
  }
  new {
    name = "powerpc64le-linux-gnu-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "powerpc64le-unknown-linux-gnu"
    buildtool = "cross"
  }
  new {
    name = "riscv64gc-linux-gnu-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "riscv64gc-unknown-linux-gnu"
    buildtool = "cross"
  }
  new {
    name = "s390x-linux-gnu-stable"
    os = x86_64_LinuxRunner
    toolchain = rustStable_x86_64_LinuxGNU
    target = "s390x-unknown-linux-gnu"
    buildtool = "cross"
  }
  new {
    name = "i686-windows-msvc-stable"
    os = x86_64_WindowsRunner
    toolchain = rustStable_x86_64_WindowsMSVC
    target = "i686-pc-windows-msvc"
    buildtool = "cargo"
  }
}
