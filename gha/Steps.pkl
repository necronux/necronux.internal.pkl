// ==-----------------------------------------------------------== //
// SPDX-FileCopyrightText: Â© 2025 Nayan Patil <nayantsg@proton.me>
//
// SPDX-License-Identifier: Apache-2.0
// ==-----------------------------------------------------------== //

@ModuleInfo { minPklVersion = "0.27.0" }
module Steps

import "../schemas/GitHubAction.pkl" as gha

import "Actions.pkl"
import "Common.pkl"

const function checkout(depth: Int?) = new gha.Step {
  name = "Checkout code"
  uses = Actions.checkout
  with {
    ["fetch-depth"] = depth ?? 1
  }
}

const function checkoutWithRef(depth: Int?, ref: String) = (checkout(depth)) {
  with {
    ["ref"] = ref
  }
}

const function installAction(tool: String) = new gha.Step {
  name = "Install \(tool)"
  uses = Actions.installAction
  with {
    ["tool"] = tool
  }
}

const function installActionIf(tool: String, condition: String) = (installAction(tool)) {
  `if` = condition
}

const function installPodmanAptIf(condition: String) = new gha.Step {
  `if` = condition
  name = "Install podman"
  run = """
  sudo apt-get update
  sudo apt-get install -y podman
  """
  shell = "bash"
}

// ================ //
// --- Rustup
// =============== //

const function setupRustToolchain(toolchain: String) = new gha.Step {
  ...Common.setupRustToolchainCommon("cargo")
  with {
    ["toolchain"] = toolchain
  }
}

const function setupRustToolchainWithComponent(toolchain: String, component: String) = (setupRustToolchain(toolchain)) {
  with {
    ["components"] = component
  }
}
const function setupRustToolchainWithTarget(toolchain: String, target: String) = (setupRustToolchain(toolchain)) {
  with {
    ["targets"] = target
  }
}
const function setupRustToolchainFull(toolchain: String, component: String, target: String) = (setupRustToolchain(toolchain, component)) {
  with {
    ["targets"] = target
  }
}

const function setupRustCache(key: String) = new gha.Step {
  name = "Setup rust cache"
  uses = Actions.rustCache
  with {
    ["prefix-key"] = "rs"
    ["save-if"] = "${{ github.ref == 'refs/heads/develop' }}"
    ["key"] = "[\(key)]"
  }
}
