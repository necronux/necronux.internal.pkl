@ModuleInfo { minPklVersion = "0.27.0" }
module Common

import "../schemas/GitHubAction.pkl" as gha

import "Actions.pkl"

const function standardJobConfig(machine: String?, timeout: Int?) = new Mixin {
  `runs-on` = machine ?? "ubuntu-latest"
  `timeout-minutes` = timeout ?? 30
}

const function setupRustToolchainCommon(buildtool: String) = new {
  name = "Setup rustup for \(buildtool)"
  uses = Actions.rustToolchain
}

const function contentPermissions(content: String) = new gha.Permissions {
  contents = content
}

const function concurrencyPROrRef() = new gha.Concurrency {
  group = "${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}"
  `cancel-in-progress` = true
}

const function headerComment(year: String, holders: String, identifier: String): String =
  let (copyrightLine = "# SPDX-FileCopyrightText: Â© \(year) \(holders)")
  let (decorationLine = "# ==" + "-".repeat(copyrightLine.length - 6) + "== #")
    """
    \(decorationLine)
    \(copyrightLine)
    #
    # SPDX-License-Identifier: \(identifier)
    \(decorationLine)
    """

const ifDevelopOrPushOrWDPushAndNotCancelled = "${{ ((github.ref == 'refs/heads/develop') || (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.trigger_event == 'push'))) && !cancelled() }}"
const ifDevelopOrPrOrWDPrAndNotCancelled = "${{ ((github.ref == 'refs/heads/develop') || (github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.trigger_event == 'pull_request'))) && !cancelled() }}"
